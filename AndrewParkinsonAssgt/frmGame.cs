using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace AndrewParkinsonAssgt
{
    public partial class frmGame : Form
    {
        public frmGame(int intGameMode)
        {
            //autogenerated stuff
            InitializeComponent();

            //Test to make sure an invalid game mode has been selected
            //if game mode is not 0, 1 or 2
            //display an error and dispose
            //this code should never be run
            if (intGameMode < 0 || intGameMode > 2)
            {
                MessageBox.Show("Invalid Game Mode Selected");
                this.Dispose();
            }



            //InitializeGameMode(intGameMode);



        }

        private class Dice
        {
            // property to determine the Hold state of each Dice object
            // this will be called 

            private Boolean bHold;

            public Boolean isHold
            {
                get { return bHold; }
                set { bHold = value; }
            }

            // This property is the value shown on the die face
            private int iDieFace;

            public int intDieFace
            {
                get { return iDieFace; }
                set {
                    if (value >= 0 && value <= 6)
                    { iDieFace = value; }
                }
            }

        }

        private class Player
        {
            // This property is the player's score
            private int iScore;

            public int intScore
            {
                get { return iScore; }
                set { iScore = value; }
            }

            // This property is the player's name and will be displayed
            // at the top of the Game form
            private String strName;

            public String Name
            {
                get { return strName; }
                set { strName = value; }
            }
        }

        private void InitializeGameMode(int intGameMode)
        {
            throw new NotImplementedException();
        }

        private void btnHoldP1D1_Click(object sender, EventArgs e)
        {

        }

        private void btnHoldP1D2_Click(object sender, EventArgs e)
        {

        }

        private void btnHoldP1D3_Click(object sender, EventArgs e)
        {

        }

        private void btnHoldP2D1_Click(object sender, EventArgs e)
        {

        }

        private void btnHoldP2D2_Click(object sender, EventArgs e)
        {

        }

        private void btnHoldP2D3_Click(object sender, EventArgs e)
        {

        }

        private void btnP1Roll_Click(object sender, EventArgs e)
        {

        }

        private void btnP2Roll_Click(object sender, EventArgs e)
        {

        }

        private void btnP1Forfeit_Click(object sender, EventArgs e)
        {
            MessageBox.Show("Player 1 Forfeits. Play again soon!");
            frmMenu Menu = new frmMenu();
            this.Dispose();
        }

        private void btnP2Forfeit_Click(object sender, EventArgs e)
        {
            MessageBox.Show("Player 2 Forfeits. Play again soon!");
            frmMenu Menu = new frmMenu();
            this.Dispose();
        }


    }
}
